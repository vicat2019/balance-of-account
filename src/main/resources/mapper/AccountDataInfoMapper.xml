<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.account.dao.AccountDataInfoMapper">
    <resultMap id="BaseResultMap" type="com.account.entity.AccountDataInfo">
        <id column="id" jdbcType="INTEGER" property="id"/>

        <result column="order_code" jdbcType="VARCHAR" property="orderCode"/>
        <result column="bank_order_code" jdbcType="VARCHAR" property="bankOrderCode"/>

        <result column="serial_num" jdbcType="VARCHAR" property="serialNum"/>
        <result column="accounting_time" jdbcType="VARCHAR" property="accountingTime"/>
        <result column="alipay_trade_no" jdbcType="VARCHAR" property="alipayTradeNo"/>
        <result column="alipay_tx_no" jdbcType="VARCHAR" property="alipayTxNo"/>
        <result column="merchant_order_no" jdbcType="VARCHAR" property="merchantOrderNo"/>
        <result column="financial_type" jdbcType="VARCHAR" property="financialType"/>

        <result column="income" jdbcType="DECIMAL" property="income"/>
        <result column="expenditure" jdbcType="DECIMAL" property="expenditure"/>
        <result column="balance" jdbcType="DECIMAL" property="balance"/>
        <result column="service_charge" jdbcType="DECIMAL" property="serviceCharge"/>

        <result column="payment_channel" jdbcType="VARCHAR" property="paymentChannel"/>
        <result column="signed_products" jdbcType="VARCHAR" property="signedProducts"/>
        <result column="payer_account" jdbcType="VARCHAR" property="payerAccount"/>
        <result column="payer_name" jdbcType="VARCHAR" property="payerName"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="source_file_name" jdbcType="VARCHAR" property="sourceFileName"/>


        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>

    </resultMap>

    <sql id="table_name">
        t_account_data_info
    </sql>

    <sql id="table_name_src">
        t_account_data_info_src
    </sql>

    <sql id="table_name_mismatch">
        t_alipay_mismatch
    </sql>

    <sql id="Base_Column_List">
        id, serial_num, accounting_time, alipay_trade_no, alipay_tx_no, merchant_order_no, financial_type, income,
        expenditure, balance, service_charge, payment_channel, signed_products, payer_account, payer_name, bank_order_code,
        product_name, order_code, remark, source_file_name, version, modify_time, create_time
      </sql>


    <insert id="insertBatchToSrc" parameterType="list">
        insert into <include refid="table_name_src"/>(serial_num, accounting_time, alipay_trade_no, alipay_tx_no, merchant_order_no,
        financial_type, income, expenditure, balance, service_charge, payment_channel, signed_products, payer_account,
        payer_name, bank_order_code, product_name, order_code, remark, source_file_name) values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.serialNum, jdbcType=VARCHAR},
            #{item.accountingTime, jdbcType=VARCHAR},
            #{item.alipayTradeNo, jdbcType=VARCHAR},
            #{item.alipayTxNo, jdbcType=VARCHAR},
            #{item.merchantOrderNo, jdbcType=VARCHAR},
            #{item.financialType, jdbcType=VARCHAR},
            #{item.income, jdbcType=DECIMAL},
            #{item.expenditure, jdbcType=DECIMAL},
            #{item.balance, jdbcType=DECIMAL},
            #{item.serviceCharge, jdbcType=DECIMAL},
            #{item.paymentChannel, jdbcType=VARCHAR},
            #{item.signedProducts, jdbcType=VARCHAR},
            #{item.payerAccount, jdbcType=VARCHAR},
            #{item.payerName, jdbcType=VARCHAR},
            #{item.bankOrderCode, jdbcType=VARCHAR},
            #{item.productName, jdbcType=VARCHAR},
            #{item.orderCode, jdbcType=VARCHAR},
            #{item.remark, jdbcType=VARCHAR},
            #{item.sourceFileName, jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <insert id="insertBatch" parameterType="list">
        insert into <include refid="table_name"/>(serial_num, accounting_time, alipay_trade_no, alipay_tx_no, merchant_order_no,
        financial_type, income, expenditure, balance, service_charge, payment_channel, signed_products, payer_account,
        payer_name, bank_order_code, product_name, order_code, remark, source_file_name) values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.serialNum, jdbcType=VARCHAR},
            #{item.accountingTime, jdbcType=VARCHAR},
            #{item.alipayTradeNo, jdbcType=VARCHAR},
            #{item.alipayTxNo, jdbcType=VARCHAR},
            #{item.merchantOrderNo, jdbcType=VARCHAR},
            #{item.financialType, jdbcType=VARCHAR},
            #{item.income, jdbcType=DECIMAL},
            #{item.expenditure, jdbcType=DECIMAL},
            #{item.balance, jdbcType=DECIMAL},
            #{item.serviceCharge, jdbcType=DECIMAL},
            #{item.paymentChannel, jdbcType=VARCHAR},
            #{item.signedProducts, jdbcType=VARCHAR},
            #{item.payerAccount, jdbcType=VARCHAR},
            #{item.payerName, jdbcType=VARCHAR},
            #{item.bankOrderCode, jdbcType=VARCHAR},
            #{item.productName, jdbcType=VARCHAR},
            #{item.orderCode, jdbcType=VARCHAR},
            #{item.remark, jdbcType=VARCHAR},
            #{item.sourceFileName, jdbcType=VARCHAR}
            )
        </foreach>
        ON DUPLICATE KEY UPDATE source_file_name=VALUES(source_file_name), modify_time=now(), version=version+1;
    </insert>

    <insert id="insertBatchMismatch" parameterType="list">
        insert into <include refid="table_name_mismatch"/>(serial_num, accounting_time, alipay_trade_no, alipay_tx_no, merchant_order_no,
        financial_type, income, expenditure, balance, service_charge, payment_channel, signed_products, payer_account,
        payer_name, bank_order_code, product_name, order_code, remark, source_file_name) values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.serialNum, jdbcType=VARCHAR},
            #{item.accountingTime, jdbcType=VARCHAR},
            #{item.alipayTradeNo, jdbcType=VARCHAR},
            #{item.alipayTxNo, jdbcType=VARCHAR},
            #{item.merchantOrderNo, jdbcType=VARCHAR},
            #{item.financialType, jdbcType=VARCHAR},
            #{item.income, jdbcType=DECIMAL},
            #{item.expenditure, jdbcType=DECIMAL},
            #{item.balance, jdbcType=DECIMAL},
            #{item.serviceCharge, jdbcType=DECIMAL},
            #{item.paymentChannel, jdbcType=VARCHAR},
            #{item.signedProducts, jdbcType=VARCHAR},
            #{item.payerAccount, jdbcType=VARCHAR},
            #{item.payerName, jdbcType=VARCHAR},
            #{item.bankOrderCode, jdbcType=VARCHAR},
            #{item.productName, jdbcType=VARCHAR},
            #{item.orderCode, jdbcType=VARCHAR},
            #{item.remark, jdbcType=VARCHAR},
            #{item.sourceFileName, jdbcType=VARCHAR}
            )
        </foreach>
        ON DUPLICATE KEY UPDATE source_file_name=VALUES(source_file_name), modify_time=now(), version=version+1;
    </insert>
    
    
    <select id="getDataByFileName" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from <include refid="table_name"/>
        where source_file_name=#{sourceFileName, jdbcType=VARCHAR}
    </select>
    
    
    <select id="getBillDateByFileName" resultType="java.lang.String">
        select distinct left(accounting_time, 10) as billDate from <include refid="table_name"/>
        where source_file_name=#{sourceFileName, jdbcType=VARCHAR}
    </select>

    <select id="queryByDate" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from <include refid="table_name"/>
        where left(accounting_time, 10)=#{accountingTime, jdbcType=VARCHAR}
    </select>




</mapper>